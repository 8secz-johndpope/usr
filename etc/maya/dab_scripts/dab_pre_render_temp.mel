//import maya.cmds as cmds
//
//'''
//put this is the pythonpath then add into the prerendermel
//Okay, the pre render script is definitely acting capriciously
//In order to investigate, I've made a small test case.
//Simple scene with only one object: nurbsSpehre1
//all scripts are in external file: pre.py
//
//CODE
//import maya.cmds
//
//def preFrame():
//    maya.cmds.move( 3, 0, 0, "nurbsSphere1", r = True)
//    x = maya.cmds.getAttr( "nurbsSphere1.tx" )
//    file = open( "log.txt","a")
//    file.write ( "x = " + x + "\r\n" )
//    file.close()
//
//pre render scripts are assigned in render globals:
//Pre render MEL: python( "import pre" )
//Pre render frame MEL: python( "pre.preFrame()" )
//
//
//'''
//current_renderer = cmds.getAttr('defaultRenderGlobals.currentRenderer')
//
//print current_renderer
//
//if current_renderer == 'vray':
//    cmds.setAttr('vraySettings.fileNamePrefix', '<Scene>_<Camera>_<Layer>.', type='string')
//elif current_renderer == 'mentalRay':
//    cmds.setAttr('defaultRenderGlobals.imageFilePrefix', '<Scene>_<Camera>_<RenderLayer>', type='string')
//elif current_renderer == 'mayaSoftware':
//    cmds.setAttr('defaultRenderGlobals.imageFilePrefix', '<Scene>_<Camera>_<RenderLayer>', type='string')
//elif current_renderer == 'renderManRIS':
//    cmds.setAttr('defaultRenderGlobals.imageFilePrefix', '<Scene>_<Camera>_<RenderLayer>', type='string')
//
//
//'''

//  EXAMPLE    python (  "import os\nprint os.environ.get('PYTHONPATH')" );
//  EXAMPLE    python (  "dab_pre_render('visualiser')" );
// want to pass in the integrator as it need to be set when rib is generated.

// need to wrap the renderman commands to groom maya before batch


// -command  >>>>> renderManBatchGenRibForLayer {layerid} {start} {end} {phase}



print(">>>>>>>> RUNNING PRE_RENDER_MEL")

//
// set resolution
//
setAttr "defaultResolution.width" 1280;
setAttr "defaultResolution.height" 720;

//
// Get the name of the first image in the sequence and process any file name prefix tokens.
//
string $firstImageName[] = `renderSettings -firstImageName -leaveUnmatchedTokens`;

//
// Get the name of the first and last image for the current layer
//
string $fl[] = `renderSettings -firstImageName -lastImageName`;
print ("First image is "+$fl[0]+"\n");
//
// This is the empty string if the scene is not set for animation
//
if ($fl[1] == "") {
	print "Not rendering animation\n";
} else {
	print ("Last image is "+$fl[1]+"\n");
}

rman getvar STAGE;      // Result: untitled //
rman getvar RIBPATH;    // Result: renderman/untitled/rib //
rmanGetAttrName "ShadingRate";    // Result: rman__riattr___ShadingRate //

//https://renderman.pixar.com/resources/RenderMan_20/howToSetRenderGlobalValues.html
rmanCreateGlobals;

setAttr "defaultRenderGlobals.extensionPadding" 4;
setAttr "defaultRenderGlobals.byFrameStep" 1;
setAttr "defaultRenderGlobals.outFormatControl" 0;
setAttr "defaultRenderGlobals.animation" 1;
setAttr "defaultRenderGlobals.putFrameBeforeExt" 1;
setAttr "defaultRenderGlobals.imageFormat" 19;
setAttr -type "string" "defaultRenderGlobals.imageFilePrefix" "<Scene>_<Camera>_<RenderLayer>";


getAttr "rmanFinalOutputGlobals0.rman__riopt__Display_type";


rmanGetChannelClasses;
rmanAddOutput rmanFinalGlobals specular;
rmanGetOutputs rmanFinalGlobals;
rmanAddOutput "rmanFinalPass" "N";
rmanCreatePass Shadow;
rmanUpdateAE;

rmanSetAttr("PxrVisualizer","style","matcap");
rmanSetAttr("renderManRISGlobals","rman__riopt__Integrator_name","PxrDebugShadingContext");
rmanSetAttr("renderManRISGlobals","rman__riopt__Integrator_name","PxrDefault");
rmanSetAttr("renderManRISGlobals","rman__riopt__Integrator_name","PxrDirectLighting");
rmanSetAttr("renderManRISGlobals","rman__riopt__Integrator_name","PxrOcclusion");
rmanSetAttr("renderManRISGlobals","rman__riopt__Integrator_name","PxrPathTracer");
rmanSetAttr("renderManRISGlobals","rman__riopt__Integrator_name","PxrVCM");
rmanSetAttr("renderManRISGlobals","rman__riopt__Integrator_name","PxrValidateBxdf");
rmanSetAttr("renderManRISGlobals","rman__riopt__Integrator_name","PxrVisualizer");

