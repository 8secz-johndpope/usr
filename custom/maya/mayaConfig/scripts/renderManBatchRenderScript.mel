// $Revision: #9 $ $Date: 2014/03/26 $
//
// Copyright (c) 2006 PIXAR.  All rights reserved.  This program or
// documentation contains proprietary confidential information and trade
// secrets of PIXAR.  Reverse engineering of object code is prohibited.
// Use of copyright notice is precautionary and does not imply
// publication.
//
//                      RESTRICTED RIGHTS NOTICE
//
// Use, duplication, or disclosure by the Government is subject to the
// following restrictions:  For civilian agencies, subparagraphs (a) through
// (d) of the Commercial Computer Software--Restricted Rights clause at
// 52.227-19 of the FAR; and, for units of the Department of Defense, DoD
// Supplement to the FAR, clause 52.227-7013 (c)(1)(ii), Rights in
// Technical Data and Computer Software.
//
// Pixar Animation Studios
// 1200 Park Avenue
// Emeryville, CA  94608
//
// Instead of launching a batch render with Maya's Render command,
// the same effect can be achieved by launching maya -batch directly
// with this script, so Alfred can control the process.
//   maya -batch -command "renderManBatchRenderScript""
// 
global proc renderManBatchRenderScript(int $anim, int $s, int $e, int $b,
				       int $jpf, int $cpus, int $memmb)
{
    print ("Using the dabanim version of renderManBatchRenderScript <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<");
    string $checkScene=`file -q -sn`; 
    if($checkScene=="") 
    {
	error "Scene was not loaded properly, please check the scene name";
	quit -a -f; 
    } 
    if(!`pluginInfo -q -l RenderMan_for_Maya`) 
    {
	loadPlugin RenderMan_for_Maya;
    } 
    rmanCreateAllGlobalsNodes(); 
    string $rl="";
    string $rp="";
    if( $anim ) {
	setAttr -l 0 defaultRenderGlobals.animation;
	setAttr defaultRenderGlobals.animation 1;
	setAttr -l 0 defaultRenderGlobals.startFrame;
	setAttr defaultRenderGlobals.startFrame $s;
	setAttr -l 0 defaultRenderGlobals.endFrame;
	setAttr defaultRenderGlobals.endFrame $e;
	setAttr -l 0 defaultRenderGlobals.maximumMemory;
	setAttr defaultRenderGlobals.maximumMemory $memmb;
	setAttr -l 0 defaultRenderGlobals.numCpusToUse;
	setAttr defaultRenderGlobals.numCpusToUse $cpus;
        string $globals = `rmanGetGlobalsName`;
	if(!attributeExists("jobphasefilter", $globals))
	    addAttr -ln "jobphasefilter" $globals;
	setAttr ($globals+".jobphasefilter") $jpf;

	if( `getApplicationVersionAsFloat` >= 7 ) {
	    removeRenderLayerAdjustmentAndUnlock defaultRenderGlobals.byFrameStep;
	} else {
	    setAttr -l 0 defaultRenderGlobals.byFrameStep 1;
	    setAttr defaultRenderGlobals.byFrameStep $b;
	}
    }
    setMayaSoftwareLayers($rl, $rp);
    // Empty string for first arg means no alfred; 
    // the purpose of this script is to be called from a maya process 
    // that's already been launched by alfred.
    renderManExecCmdlineRender("",
			       0, 0, 0);
}
